{% extends '::base.html.twig' %}

{% block title %}File list - Emission{% endblock %}

{% block javascripts %}
<script src="{{ asset('bundles/enginewerkemission/js/jquery-1.7.2.min.js') }}"></script>
<script src="{{ asset('bundles/enginewerkemission/js/vendor/resumable/resumable.js') }}"></script>
<script src="{{ asset('bundles/enginewerkemission/js/base.js') }}"></script>
{% endblock %}

{% block stylesheets %}
<!-- Generic page styles -->
<link rel="stylesheet" href="{{ asset('bundles/enginewerkemission/css/style.css') }}">
<link rel="stylesheet" href="{{ asset('bundles/enginewerkemission/css/resumable.css') }}">
{% endblock %}

{% block body %}
<!-- The fileinput-button span is used to style the file input field as button -->
    <menu>Emission {{ app.user.username }} logout</menu>
    <div id="emissionSettingsContainer">
        <div>Chunk size: {{max_chunk_size}} M</div>
    </div>
    <div id="emissionFileDropContainer">
        <div id="dropbox">
            <div id="browse"></div>
        </div>
    </div>
    
    <div id="emissionFileListUploadContainer">
        <!-- The global progress bar -->
        <div id="progress" class="progress">
            <div class="progress-bar progress-bar-success"></div>
        </div>
        <!-- The container for the uploaded files -->
        <div id="files" class="files">
        </div>

        <table cellspacing="10" cellpadding="10" id="filesTable" class="center">
            <tbody>
        {% for File in Files %}
            <tr{% if File.isComplete == 1 %} data-file-completed="yes"{% endif%} data-file-id="{{ File.id }}">
                <td class="fileName">{{ File.name }}</td>
                <td class="fileUploadedBy">{{ File.uploadedBy }}</td>
                <td class="fileHashID">{{ File.fileId }}</td>
                <td class="fileType">{{ File.type }}</td>
                <td class="fileSize">{{ File.size }}</td>
                <td class="fileExpirationDate">{{ File.expirationDate|date("Y-m-d H:i:s") }}</td>
                <td class="fileUpdatedAt">{{ File.updatedAt|date("Y-m-d H:i:s") }}</td>
                <td class="fileCreatedAt">{{ File.createdAt|date("Y-m-d H:i:s") }}</td>
                {% if File.isComplete == 1 %}
                    <td><a href="{{ path('show_file', {'file': File.fileId}) }}">show</a> 
                        <a href="{{ path('download_file', {'file': File.fileId}) }}">save</a> 
                        <a href="{{ path('open_file', {'file': File.fileId}) }}">open</a> - 
                        <a href="{{ path('delete_file', {'file': File.fileId}) }}" class="remove-file" data-filename="{{ File.name }}">delete</a>
                    </td>
                {% else %}
                    <td>Incomplete - <a href="{{ path('delete_file', {'file': File.fileId}) }}">delete</a></td>
                {% endif%}
            </tr>
        {% endfor %}
            </tbody>
        </table>
    </div>
    <script type="text/javascript">
        var url = '{{ path('upload_file') }}'
        var urlChunkTest = '{{ path('upload_file_chunk_test') }}'
        var maxChunkSize = ({{max_chunk_size}} * 1024 * 1024); // 16 MB
        var postdata = {'form[_token]' : '{{Form._token.vars.value}}'};
        
        var r = new Resumable({
            target: url, 
            targetChunkTestUrl: urlChunkTest, 
            simultaneousUploads: 1,
            method : 'POST',
            chunkSize : maxChunkSize,
            forceChunkSize : true,
            testChunks : true,
            query: postdata,
            fileParameterName : 'form[fileBlob]',
        });

        // Resumable.js isn't supported, fall back on a different method
        //if(!r.support) location.href = '/flash';

        r.assignBrowse(document.getElementById('browse'));
        r.assignDrop(document.getElementById('dropbox'));
        
        var pendingFilesNumber = 0;
    
        r.on('fileAdded', function(file, event){
            r.upload();
            pendingFilesNumber++;
        });
        
        r.on('fileSuccess', function(file, response){

            log('Total files: ' + r.files.length);
            try {
                rsp = jQuery.parseJSON(response);
            } catch (error) {
                log('JSON parse error: ' + error);
                log(response);
            }

            if(rsp) {
                if(rsp.status === 'Success') {
                    if(rsp.data) {
                        //viewAddFile(rsp.data);
                        
                        var file = rsp.data;
                        var link = $('<a>')
                        .attr('target', '_blank')
                        .prop('href', file.download_url);
                
                    
                    var tableRow = '<tr data-file-id="' + file.id + '"> \n' + 
            '<td class="fileName">' + file.name + '</td> \n' + 
            '<td class="fileHashID">' + file.file_id + '</td> \n' + 
            '<td class="fileUploadedBy">' + file.uploaded_by + '</td> \n' + 
            '<td class="fileType">' + file.type + '</td> \n' + 
            '<td class="fileSize">' + file.size + '</td> \n' + 
            '<td class="fileExpirationDate">' + file.expiration_date + '</td> \n' + 
            '<td class="fileUpdatedAt">' + file.updated_at + '</td> \n' + 
            '<td class="fileCreatedAt">' + file.created_at + '</td> \n' + 
            '<td><a href="' + file.show_url + '">show</a> <a href="' + file.download_url + '">save</a> <a href="' + file.open_url + '">open</a> - <a href="' + file.delete_url + '" class="remove_file">delete</a></td> \n' + 
        '</tr>';

                    $('#filesTable tbody').prepend(tableRow);
                        
                        pendingFilesNumber--;

                        if(pendingFilesNumber === 0) {
                            cursorNormal();
                            setTimeout(function(){
                                $('#dropbox_progress').fadeOut(200, function(){
                                    $('#dropbox').fadeIn(200);
                                    $('#dropbox_progress').find('.progress').width(0);
                                    $('#dropbox_progress').find('.progress').html('');
                                });        
                            }, 100);
                        }

                    } else {
                        log("Chunk uploaded");
                    }

                } else {
                    if(rsp.status === 'Error') {
                        if(rsp.data.message) {
                            alert('Wystąpił błąd.' + rsp.data.message);
                        } else {
                            alert('Wystąpił nieznany błąd');
                        }
                    } else {
                        alert('Wystąpił nieznany błąd');
                    }
                }
            } else {
                alert('Wystąpił nieobsługiwalny błąd');
            } 
        });

        r.on('fileError', function(file, message){
            log('fileError');
            alert('Błąd przesyłu');
            cursorNormal();
        });

        r.on('progress', function() {

            $('#dropbox_progress').find('.progress').width($('#dropbox_progress').find('.progressHolder').width() * r.progress());
            //var percent = Math.round(r.progress() * 100);   
            $('#dropbox_progress').find('.progress').html('Szufluję...');

        });
    </script>
{% endblock %}

