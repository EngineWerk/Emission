{% extends '::base.html.twig' %}

{% block title %}File list - Emission{% endblock %}

{% block javascripts %}
{#<script src="{{ asset('bundles/enginewerkemission/js/jquery-1.7.2.min.js') }}"></script>#}
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
<!-- The jQuery UI widget factory, can be omitted if jQuery UI is already included -->
<script src="{{ asset('bundles/enginewerkemission/js/vendor/jquery.ui.widget.js') }}"></script>
<!-- The Iframe Transport is required for browsers without support for XHR file uploads -->
<script src="{{ asset('bundles/enginewerkemission/js/jquery.iframe-transport.js') }}"></script>
<!-- The basic File Upload plugin -->
<script src="{{ asset('bundles/enginewerkemission/js/jquery.fileupload.js') }}"></script>
<!-- Bootstrap JS is not required, but included for the responsive demo navigation -->
<script src="//netdna.bootstrapcdn.com/bootstrap/3.0.0/js/bootstrap.min.js"></script>

{% endblock %}

{% block stylesheets %}
<!-- Bootstrap CSS Toolkit styles -->
<link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css">
<!-- Generic page styles -->
<link rel="stylesheet" href="{{ asset('bundles/enginewerkemission/css/style.css') }}">
<!-- Bootstrap styles for responsive website layout, supporting different screen sizes -->
<!-- Bootstrap CSS fixes for IE6 -->
<!--[if lt IE 7]><link rel="stylesheet" href="http://blueimp.github.io/cdn/css/bootstrap-ie6.min.css"><![endif]-->
<!-- CSS to style the file input field as button and adjust the Bootstrap progress bars -->
<link rel="stylesheet" href="{{ asset('bundles/enginewerkemission/css/jquery.fileupload-ui.css') }}">
{% endblock %}

{% block body %}
<!-- The fileinput-button span is used to style the file input field as button -->
    
    <div>Chunk size: {{max_chunk_size}} M</div>
    <span class="btn btn-success fileinput-button">
        <i class="icon-plus icon-white"></i>
        <span>Add files...</span>
        <!-- The file input field used as target for the file upload widget -->
        <input id="fileupload" type="file" name="files[]" multiple>
    </span>
    <br>
    <br>
    <!-- The global progress bar -->
    <div id="progress" class="progress">
        <div class="progress-bar progress-bar-success"></div>
    </div>
    <!-- The container for the uploaded files -->
    <div id="files" class="files"></div>
    
    <table cellspacing="10" cellpadding="10" id="filesTable">
        <thead>
            <th>ID</th>
            <th>Name</th>
            <th>File ID</th>
            <th>Uploaded by</th>
            <th>Type</th>
            <th>Size</th>
            <th>Expiration date</th>
            <th>Updated at</th>
            <th>Uploaded on</th>
            <th></th>
        </thead>
        <tbody>
    {% for File in Files %}
        <tr>
            {% if File.isComplete == 1 %}
                <td>{{ File.id }}</td>
                <td>{{ File.name }}</td>
                <td>{{ File.fileId }}</td>
                <td>{{ File.uploadedBy }}</td>
                <td>{{ File.type }}</td>
                <td>{{ File.size }}</td>
                <td>{{ File.expirationDate|date("Y-m-d H:i:s") }}</td>
                <td>{{ File.updatedAt|date("Y-m-d H:i:s") }}</td>
                <td>{{ File.createdAt|date("Y-m-d H:i:s") }}</td>
                <td><a href="{{ path('show_file', {'file': File.fileId}) }}">show</a> <a href="{{ path('download_file', {'file': File.fileId}) }}">save</a> <a href="{{ path('open_file', {'file': File.fileId}) }}">open</a> - <a href="{{ path('delete_file', {'file': File.fileId}) }}">delete</a></td>
            {% else %}
                <td>{{ File.id }}</td>
                <td>{{ File.name }}</td>
                <td>{{ File.fileId }}</td>
                <td>{{ File.uploadedBy }}</td>
                <td>{{ File.type }}</td>
                <td>{{ File.size }}</td>
                <td>{{ File.expirationDate|date("Y-m-d H:i:s") }}</td>
                <td>{{ File.updatedAt|date("Y-m-d H:i:s") }}</td>
                <td>{{ File.createdAt|date("Y-m-d H:i:s") }}</td>
                <td>Incomplete - <a href="{{ path('delete_file', {'file': File.fileId}) }}">delete</a></td>
            {% endif%}
        </tr>
    {% endfor %}
        </tbody>
    </table>
    
    <script type="text/javascript">
        /*jslint unparam: true */
        /*global window, $ */
        $(function () {
            'use strict';
            // Change this to the location of your server-side upload handler:
            var url = '{{ path('upload_xhr_file') }}',
                uploadButton = $('<button/>')
                    .addClass('btn')
                    .prop('disabled', true)
                    .text('Processing...')
                    .on('click', function () {
                        var $this = $(this),
                            data = $this.data();
                        $this
                            .off('click')
                            .text('Abort')
                            .on('click', function () {
                                $this.remove();
                                data.abort();
                            });
                        data.submit().always(function () {
                            $this.remove();
                        });
                    });
                    
            $('#fileupload').fileupload({
                url: url,
                type: 'POST',
                dataType: 'json',
                autoUpload: true,
               // acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
                //limitMultiFileUploads: 1,
                singleFileUploads: true,
                limitConcurrentUploads: 1,
                maxChunkSize: ({{max_chunk_size}} * 1024 * 1024), // 16 MB
                sequentialUploads: true,
                maxFileSize: 999999999999, // 999 Gb
                formData:[
                    {
                        name: 'form[_token]',
                        value: '{{Form._token.vars.value}}'
                    }
                ],
                paramName: 'form[fileBlob]',
                // Enable image resizing, except for Android and Opera,
                // which actually support image resizing, but fail to
                // send Blob objects via XHR requests:
                disableImageResize: /Android(?!.*Chrome)|Opera/
                    .test(window.navigator && navigator.userAgent),
                //previewMaxWidth: 100,
                //previewMaxHeight: 100,
                //previewCrop: true,
                disableImagePreview: true,
                disableAudioPreview: true,
                disableVideoPreview: true
                        
            }).on('fileuploadadd', function (e, data) {
                data.context = $('<div/>').appendTo('#files');
                $.each(data.files, function (index, file) {
                    var node = $('<p/>')
                            .append($('<span/>').text(file.name));
                    if (!index) {
                        node
                            .append('<br>')
                            .append(uploadButton.clone(true).data(data));
                    }
                    node.appendTo(data.context);
                });
            }).on('processalways', function (e, data) {
                var index = data.index,
                    file = data.files[index],
                    node = $(data.context.children()[index]);
                if (file.preview) {
                    node
                        .prepend('<br>')
                        .prepend(file.preview);
                }
                if (file.error) {
                    node
                        .append('<br>')
                        .append(file.error);
                }
                if (index + 1 === data.files.length) {
                    data.context.find('button')
                        .text('Upload')
                        .prop('disabled', !!data.files.error);
                }
            }).on('fileuploadprogressall', function (e, data) {
                var progress = parseInt(data.loaded / data.total * 100, 10);
                $('#progress .progress-bar').css(
                    'width',
                    progress + '%'
                );
            }).on('fileuploaddone', function (e, data) {
                //console.log('fileuploaddodne');
                //data.file.each(data.result.files, function (index, file) {
                
                //});
                
                
                $.each(data.result, function (index, file) {
                    //console.log(file);
                    var link = $('<a>')
                        .attr('target', '_blank')
                        .prop('href', file.download_url);
                
                    
                    var tableRow = '<tr> \n' + 
            '<td>' + file.id + '</td> \n' + 
            '<td>' + file.name + '</td> \n' + 
            '<td>' + file.file_id + '</td> \n' + 
            '<td>' + file.uploaded_by + '</td> \n' + 
            '<td>' + file.type + '</td> \n' + 
            '<td>' + file.size + '</td> \n' + 
            '<td>' + file.expiration_date + '</td> \n' + 
            '<td>' + file.updated_at + '</td> \n' + 
            '<td>' + file.created_at + '</td> \n' + 
            '<td><a href="' + file.show_url + '">show</a> <a href="' + file.download_url + '">save</a> <a href="' + file.open_url + '">open</a> - <a href="' + file.delete_url + '">delete</a></td> \n' + 
        '</tr>';

                    $('#filesTable tbody').prepend(tableRow);
                    $(data.context.children()[index])
                        .remove();
                
                });
            }).on('fileuploadfail', function (e, data) {
                /*$.each(data.result.files, function (index, file) {
                    var error = $('<span/>').text(file.error);
                    $(data.context.children()[index])
                        .append('<br>')
                        .append(error);
                
                });*/
    
            }).on('fileuploadchunksend', function (e, data) {
                //console.log(e);
                //console.log('fileuploadchunksend');
                //return false;
            });
        });
        </script>
{% endblock %}

